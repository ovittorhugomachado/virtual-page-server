generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                  @id @default(autoincrement())
  name                String
  email               String               @unique
  phoneNumber         String
  password            String
  status              UserStatus
  refreshAccessToken  String?
  passwordResetTokens PasswordResetToken[]
  tokenEmail          String               @unique
  created_at          DateTime             @default(now())
  updated_at          DateTime             @updatedAt
  projects            Project[]

  @@map("users")
}

model Project {
  id              Int              @id @default(autoincrement())
  userId          Int
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  name            String
  type            PageType
  status          ProjectStatus
  projectSettings ProjectSettings? @relation("ProjectToSettings")
  created_at      DateTime         @default(now())

  @@map("projects")
}

model ProjectSettings {
  id         Int      @id @default(autoincrement())
  projectId  Int      @unique
  project    Project  @relation("ProjectToSettings", fields: [projectId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("password_reset_tokens")
}

enum PageType {
  LANDING_PAGE
  CORPORATE_WEBSITE
  CUSTOM_WEBSITE
}

enum ProjectStatus {
  ACTIVE
  FREE_TRIAL
  EXPIRED
  CANCELED
}

enum UserStatus {
  PENDING
  ACTIVE
  CANCELED
}
